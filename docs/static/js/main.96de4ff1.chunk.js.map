{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","subtitle","categories","i","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,yBAAKgB,UAAU,6DAEX,yBAAKC,IAAMjB,EAAMkB,IAAMR,IACxB,2BAAKA,KCNHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDf0BK,CAAc5B,GAAlCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,wDAAyDlB,GAErEsB,GAAW,sCAEb,yBAAKJ,UAAU,aAEPL,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACJD,UEdhBoB,EAAe,SAAC,GAAiC,IAAD,IAA/BC,gBAA+B,MAApB,eAAoB,IAErB7C,mBAAS,CAAC,mBAFW,mBAElD8C,EAFkD,KAEtC/C,EAFsC,KAIzD,OACE,oCACE,4BAAK8C,GACL,kBAAC,EAAD,CAAa9C,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWvB,KAAK,SAACT,EAAUiC,GAAX,OACZ,kBAAC,EAAD,CACAJ,IAAM7B,EACNA,SAAWA,UCf/BkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.96de4ff1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(categ => [ inputValue, ...categ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=SdOI541dhuRGJ3R13WIsU2VcLWmCy5zI`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return  {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n    \r\n    console.log({id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInY animate__delay-2s\">\r\n            \r\n            <img src={ url } alt={ title } />\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flipInY animate__delay-2s\">{ category }</h3>\r\n            \r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport  { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n    \r\n    return state; // { data:[], loading: true }\r\n}","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './component/AddCategory';\r\nimport { GifGrid } from './component/GifGrid';\r\n\r\nexport const GifExpertApp = ({subtitle = 'GifExpertApp'}) => {\r\n\r\n    const [categories, setCategories] = useState(['Rick and Morty'])\r\n\r\n    return (\r\n      <>\r\n        <h2>{subtitle}</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map( (category, i) => (\r\n                    <GifGrid \r\n                    key={ category }\r\n                    category={ category }\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n      </>\r\n    );\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}